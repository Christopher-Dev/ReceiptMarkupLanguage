@page "/"
@using RmlEditor.Models


<div class="outer-container">

    <MudStack Justify="Justify.SpaceBetween" Row="true" AlignItems="AlignItems.Center" Style="margin-bottom: 1rem;">

        <MudButton Color="Color.Inherit" Variant="Variant.Outlined" Ripple="true">Create New Receipt</MudButton>


        <div style="max-width: 50%;">
            <MudTextField T="string" Label="Search" Placeholder="Search keys or values" Immediate="true" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </div>

    </MudStack>

    <div style="overflow-y: auto; height: 100%; width: 100%;">

        @foreach (var item in Receipts)
        {
            <button @onclick="@((args) => NavToEditor(args, item.Id))" class="list-row-outer">

                <div class="list-row-inner">

                    <div class="list-row-text">

                        <MudText Style="color: #bab9b5;" Typo="Typo.h5">@item.ProjectName</MudText>

                        <MudText Style="color: #bab9b5;">Last Updated: @item.LastUpdatedOn?.ToLocalTime().ToString("M")</MudText>
                
                    </div>

                    <MudIconButton Color="Color.Error" Icon="@Icons.Material.Filled.Delete"></MudIconButton>

                </div> 

                <MudDivider DividerType="DividerType.FullWidth"></MudDivider>

            </button>
        }

    </div>

</div>



@code{
    public List<ReceiptModel> Receipts { get; set; } = new List<ReceiptModel>();


    protected override async Task OnInitializedAsync()
    {

        Receipts.Add(new ReceiptModel()
        {
            Code = string.Empty,
            CreatedOn = DateTimeOffset.UtcNow,
            Id = Guid.NewGuid(),
            LastUpdatedOn = DateTimeOffset.UtcNow,
            ProjectName = "Receipt Builder"
        });

        Receipts.Add(new ReceiptModel()
        {
            Code = string.Empty,
            CreatedOn = DateTimeOffset.UtcNow,
            Id = Guid.NewGuid(),
            LastUpdatedOn = DateTimeOffset.UtcNow,
            ProjectName = "Receipt Builder"
        });

        Receipts.Add(new ReceiptModel()
        {
            Code = string.Empty,
            CreatedOn = DateTimeOffset.UtcNow,
            Id = Guid.NewGuid(),
            LastUpdatedOn = DateTimeOffset.UtcNow,
            ProjectName = "Receipt Builder"
        });

        Receipts.Add(new ReceiptModel()
        {
            Code = string.Empty,
            CreatedOn = DateTimeOffset.UtcNow,
            Id = Guid.NewGuid(),
            LastUpdatedOn = DateTimeOffset.UtcNow,
            ProjectName = "Receipt Builder"
        });



        await base.OnInitializedAsync();
    }




    public void NavToEditor(MouseEventArgs args, Guid id)
    {
        NavigationManager.NavigateTo($"/editor/{id}");
    }




}